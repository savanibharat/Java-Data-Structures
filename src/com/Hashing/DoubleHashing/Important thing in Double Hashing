Table Size a Prime Number

Double hashing requires that the size of the hash table is a prime number. To see
why, imagine a situation in which the table size is not a prime number. For example,
suppose the array size is 15 (indices from 0 to 14), and that a particular key hashes to
an initial index of 0 and a step size of 5. The probe sequence will be 0, 5, 10, 0, 5,
10, and so on, repeating endlessly. Only these three cells are ever examined, so the
algorithm will never find the empty cells that might be waiting at 1, 2, 3, and so on.

The algorithm will crash and burn.

If the array size were 13, which is prime, the probe sequence will eventually visit
every cell. It’s 0, 5, 10, 2, 7, 12, 4, 9, 1, 6, 11, 3, and so on and on. If there is even
one empty cell, the probe will find it. Using a prime number as the array size makes
it impossible for any number to divide it evenly, so the probe sequence will eventually
check every cell.

A similar effect occurs using the quadratic probe. In that case, however, the step size
gets larger with each step and will eventually overflow the variable holding it, thus
preventing an endless loop.
In general, double hashing is the probe sequence of choice when open addressing is
used.